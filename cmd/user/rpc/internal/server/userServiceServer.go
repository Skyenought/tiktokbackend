// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"github.com/Skyenought/tiktokbackend/cmd/user/rpc/internal/logic"
	"github.com/Skyenought/tiktokbackend/cmd/user/rpc/internal/svc"
	"github.com/Skyenought/tiktokbackend/cmd/user/rpc/userpc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	userpc.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) Login(ctx context.Context, in *userpc.LoginReq) (*userpc.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServiceServer) Register(ctx context.Context, in *userpc.RegisterReq) (*userpc.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServiceServer) UserInfo(ctx context.Context, in *userpc.UserInfoReq) (*userpc.UserInfoResp, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserServiceServer) UpdateCount(ctx context.Context, in *userpc.UpdateCountReq) (*userpc.UpdateCountResp, error) {
	l := logic.NewUpdateCountLogic(ctx, s.svcCtx)
	return l.UpdateCount(in)
}

func (s *UserServiceServer) RelationFollowlist(ctx context.Context, in *userpc.RelationFollowlistReq) (*userpc.RelationFollowlistResp, error) {
	l := logic.NewRelationFollowlistLogic(ctx, s.svcCtx)
	return l.RelationFollowlist(in)
}

func (s *UserServiceServer) RelationFanlist(ctx context.Context, in *userpc.RelationFanlistReq) (*userpc.RelationFanlistResp, error) {
	l := logic.NewRelationFanlistLogic(ctx, s.svcCtx)
	return l.RelationFanlist(in)
}

func (s *UserServiceServer) RelationAction(ctx context.Context, in *userpc.RelationActionReq) (*userpc.RelationActionResp, error) {
	l := logic.NewRelationActionLogic(ctx, s.svcCtx)
	return l.RelationAction(in)
}

func (s *UserServiceServer) MsgChatList(ctx context.Context, in *userpc.MsgChatListReq) (*userpc.MsgChatListResp, error) {
	l := logic.NewMsgChatListLogic(ctx, s.svcCtx)
	return l.MsgChatList(in)
}

func (s *UserServiceServer) MsgAction(ctx context.Context, in *userpc.MsgActionReq) (*userpc.MsgActionResp, error) {
	l := logic.NewMsgActionLogic(ctx, s.svcCtx)
	return l.MsgAction(in)
}
