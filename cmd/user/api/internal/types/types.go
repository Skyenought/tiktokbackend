// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserID     int64  `json:"user_id"`
	Token      string `json:"token"`
}

type RegisterReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type RegisterResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserID     int64  `json:"user_id"`
	Token      string `json:"token"`
}

type UserInfoReq struct {
	UserID int64  `form:"user_id"`
	Token  string `form:"token"`
}

type UserInfoResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	User       User   `json:"user"`
}

type MsgChatListReq struct {
	Token      string `form:"token"`
	ToUserID   int64  `form:"to_user_id"`
	PreMsgTime int64  `form:"pre_msg_time"`
}

type MsgChatListResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	MsgList    []Msg  `json:"message_list"`
}

type MsgActionReq struct {
	Token      string `form:"token"`
	ToUserID   int64  `form:"to_user_id"`
	ActionType int32  `form:"action_type"`
	Content    string `form:"content"`
}

type MsgActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type FollowActionReq struct {
	UserID     int64  `form:"user_id,optional"`
	Token      string `form:"token"`
	ToUserID   int64  `form:"to_user_id"`
	ActionType int32  `form:"action_type,options=1|2"`
}

type FollowActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type UserfollowlistReq struct {
	UserID int64  `form:"user_id"`
	Token  string `form:"token"`
}

type UserfollowlistResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserList   []User `json:"user_list"`
}

type UserfanslistReq struct {
	UserID int64  `form:"user_id"`
	Token  string `form:"token"`
}

type UserfanslistResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserList   []User `json:"user_list"`
}

type UserfriendListReq struct {
	UserID int64  `form:"user_id""`
	Token  string `form:"token"`
}

type UserfriendListResp struct {
	StatusCode int32  `form:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserList   []User `json:"user_list"`
}

type User struct {
	ID              int64  `json:"id"`
	Name            string `json:"name"`
	FollowCount     int32  `json:"follow_count"`
	FollowerCount   int32  `json:"follower_count"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar"`
	BackgroundImage string `json:"background_image"`
	Signature       string `json:"signature"`
	TotalFavorited  string `json:"total_favorited"`
	WorkCount       int32  `json:"work_count"`
	FavoriteCount   int32  `json:"favorite_count"`
}

type Video struct {
	ID            int64  `json:"id,optional"`
	Author        User   `json:"author,optional"`
	CoverUrl      string `json:"cover_url,optional"`
	PlayUrl       string `json:"play_url,optional"`
	FavoriteCount int32  `json:"favorite_count,optional"`
	CommentCount  int32  `json:"comment_count,optional"`
	IsFavorite    bool   `json:"is_favorite,optional"`
	Title         string `json:"title,optional"`
}

type Comment struct {
	ID         int64  `json:"id,optional"`
	User       User   `json:"user,optional"`
	Content    string `json:"content,optional"`
	CreateDate string `json:"create_date,optional"`
}

type Msg struct {
	ID         int64  `json:"id"`
	Content    string `json:"content"`
	ToUserID   int64  `json:"to_user_id"`
	FromUserID int64  `json:"from_user_id"`
	CreateTime int64  `json:"create_time,omitempty"`
}
